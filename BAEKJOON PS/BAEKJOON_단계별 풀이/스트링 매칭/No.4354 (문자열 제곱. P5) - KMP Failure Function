## 문제 링크 : https://www.acmicpc.net/problem/4354

#include <iostream>
#include <string>
using namespace std;
int F[1000000];
string T, P;
void Compute_Prefix_Function(string pattern) {
	int m = pattern.length(), k = 0;
	F[1] = 0;
	for (int q = 2; q < m; q++) {
		while (k > 0 && pattern[k + 1] != pattern[q]) {
			k = F[k];
		}
		if (pattern[k + 1] == pattern[q]) {
			k++;
		}
		F[q] = k;
	}
	if ((m - 1) % 2 && (m - 1) % (m - 1 - F[m - 1]) != 0)	// 제곱 실패 조건 1 : 홀수,  조건 2 : 마지막 F 계산 결과 preffix-suffix 중복 있는 경우
		cout << 1 << "\n";
	else
		cout << (m - 1) / (m - 1 - F[m - 1]) << "\n";
}
int main() {
	ios_base::sync_with_stdio(0);
	cin.tie(0);
	getline(cin, P);
	while (P != ".") {
		P = " " + P;
		Compute_Prefix_Function(P);
		getline(cin, P);
	}
}
