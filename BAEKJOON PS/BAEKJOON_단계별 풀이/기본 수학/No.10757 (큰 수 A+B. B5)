#include <iostream>
#include <string>
#define _CRT_SECURE_NO_WARNINGS
using namespace std;
int return_size(char* char_array) {
	int index = 0;
	while (char_array[index++] != '\0') {}
	return index - 1;
}
char* reverse_char(char* char_array) {
	int size = return_size(char_array);
	char* new_char = new char[size];
	for (int i = 0, k = size - 1; i < size; i++, k--) {
		new_char[k] = char_array[i];
	}
	return new_char;
}
int main() {
	char a_in[10001], b_in[10001];
	int a_size, b_size, big_size, sum_num, decimal = 0;
	int sum[10002];
	cin >> a_in >> b_in;
	a_size = return_size(a_in);
	b_size = return_size(b_in);
	if (a_size < 10 && b_size < 10) {
		cout << atoi(a_in) + atoi(b_in);
	}
	else {
		char* a = new char[a_size + 1];
		char* b = new char[b_size + 1];
		a = reverse_char(a_in);
		b = reverse_char(b_in);

		big_size = (a_size > b_size) ? a_size : b_size;
		int index = 0, a_temp, b_temp;
		while (index < big_size) {
			a_temp = (index < a_size) ? int(a[index] - '0') : 0;
			b_temp = (index < b_size) ? int(b[index] - '0') : 0;
			sum_num = a_temp + b_temp;
			if (decimal > 0) { sum_num++; }
			if (sum_num < 10) { decimal = 0; }
			else { sum_num -= 10; decimal = 1; }
			sum[index++] = sum_num;
		}
		if (decimal > 0) { sum[index++] = 1; }
		for (int i = index - 1; i >= 0; i--) {
			cout << sum[i];
		}
	}
}
